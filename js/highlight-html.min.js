'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};export default function highlightHTML(){var inp=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'body';var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var settings=_extends({mode:'append',//return
output:'body',inputType:'selector',//manual
tagClass:'tag',valueClass:'val',attrClass:'attr'},options);var input='<h1>Fill input!</h1>';var mode=settings.mode;if(settings.inputType==='selector'){input=document.querySelector(inp).outerHTML}else if(settings.inputType==='manual'){input=inp}else{throw new Error('inputType is not valid. Use \'selector\' (default) or \'manual\'.')}var tagClass=settings.tagClass,valueClass=settings.valueClass,attrClass=settings.attrClass;var tagBegin=/<\s?(\w*)\s?>/gi,tagEnd=/<\s?(\/\w*)\s?>/gi,classId=/<\s?(\w*)\s((?:class|id|data[-\\w]+|data)\s?=?\s?"[\w\s-]*>?")*/gi,hlStrings=new RegExp('(<\\s?span class\\s?=\\s?"'+tagClass+'"\\s?>[\\w-\\s]+<\\s?/span\\s?>\\s*)(class|id|data[-\\w]+|data)\\s?=?\\s?("[\\w-\\s]+")?','ig'),hlStringsMultiple=new RegExp('(<\\s?span class\\s?=\\s?"'+valueClass+'"\\s?>"[\\w-\\s]+"<\\s?/span\\s?>\\s*)(class|id|data[-\\w]+|data)\\s?=?\\s?("[\\w-\\s]+")?','ig');var outputHTML=input.replace(tagBegin,'<$1>&lt;$1&gt;');//<div>
outputHTML=outputHTML.replace(tagEnd,'&lt;$1&gt;<$1>');//</div>
outputHTML=outputHTML.replace(classId,'<$1 $2>&lt;$1 $2');//<div class ...>
//Highlight
//tags
outputHTML=outputHTML.replace(/&lt;(\s?\/?\s?\w+)(\s*)/gi,'&lt;<span class="'+tagClass+'">$1</span>$2');//<div ...>
//strings
outputHTML=outputHTML.replace(hlStrings,'$1<span class="'+attrClass+'">$2</span>=<span class="'+valueClass+'">$3</span>');//multiple strings
for(var j=1;j<=5;j++){outputHTML=outputHTML.replace(hlStringsMultiple,'$1<span class="'+attrClass+'">$2</span>=<span class="'+valueClass+'">$3</span>')}//Output
if(mode=='append'){output.innerHTML=outputHTML}else{return outputHTML}}
